name: Build and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t myapp-service:${{ github.sha }} .
          echo "Docker image built successfully: myapp-service:${{ github.sha }}"

      - name: Login to OCI Registry
        uses: docker/login-action@v3
        with:
          registry: iad.ocir.io
          username: ${{ secrets.OCI_USERNAME }}
          password: ${{ secrets.OCI_AUTH_TOKEN }}
        continue-on-error: true

      - name: Tag and Push to OCI Registry
        run: |
          docker tag myapp-service:${{ github.sha }} iad.ocir.io/${{ secrets.OCI_TENANCY }}/myapp-service:${{ github.sha }}
          docker push iad.ocir.io/${{ secrets.OCI_TENANCY }}/myapp-service:${{ github.sha }}
        continue-on-error: true

      - name: Trigger ArgoCD sync
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.ARGOCD_TOKEN }}" \
            -H "Content-Type: application/json" \
            https://argocd.myapp.com/api/v1/applications/springboot-app/sync
        continue-on-error: true

      - name: Build Summary
        run: |
          echo "‚úÖ Build completed successfully!"
          echo "üì¶ Docker image: myapp-service:${{ github.sha }}"
          echo "üìù To enable OCI push, add OCI secrets to repository settings"
          echo "üìù To enable ArgoCD sync, add ARGOCD_TOKEN secret to repository settings"
